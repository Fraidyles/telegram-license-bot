import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ConversationHandler, ContextTypes, filters

(
    MAIN_MENU,
    PROFESSION,
    EDUCATION,
    SPECIALITY_CHECK,
    EXPERIENCE,
    POSTGRADUATE_EDU,
    POSTGRADUATE_YEARS,
    ACCREDITATION,
    FROM_RUSSIA,
    RESUME_TEMPLATE_CHOICE,
    COURSE_PROGRAM_CHOICE,
) = range(11)

SPECIALITIES_GP = [
    "–¢–µ—Ä–∞–ø–µ–≤—Ç", "–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è", "–†–µ–∞–Ω–∏–º–∞—Ç–æ–ª–æ–≥–∏—è", "–°–∫–æ—Ä–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å",
    "–°–µ–º–µ–π–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞", "–ü–µ–¥–∏–∞—Ç—Ä–∏—è", "–û–±—â–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è", "–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ –∏ –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è"
]

POSTGRADUATE_OPTIONS = [
    "–ò–Ω—Ç–µ—Ä–Ω–∞—Ç—É—Ä–∞",
    "–û—Ä–¥–∏–Ω–∞—Ç—É—Ä–∞ 2 –≥–æ–¥–∞",
    "–û—Ä–¥–∏–Ω–∞—Ç—É—Ä–∞ 3+ –ª–µ—Ç –∏–ª–∏ —Ä–µ–∑–∏–¥–µ–Ω—Ç—É—Ä–∞ 3+ –ª–µ—Ç",
    "–ê—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞ –∏ –ö–ú–ù"
]

RESUME_TEMPLATES = {
    "GP": "–û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≥–µ—Ç–∫—É—Ä—Å, –≥–¥–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ –∑–∞–ø–∏—Å—è–º –ª–µ–∫—Ü–∏–π...\n(–¥–∞–ª–µ–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞ GP)",
    "BT": "–í –Ω–∞—á–∞–ª–µ –∏–¥–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–¥–∞—á–µ —ç–∫–∑–∞–º–µ–Ω–∞, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è Prometric Exam...\n(–¥–∞–ª–µ–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞ BT)",
    "GD –ü–æ–ª–∏–Ω–∞ –ì–∞–Ω–∂–∞—Ä–∞": "–ü—Ä–æ–≥—Ä–∞–º–º–∞: 20 –∑–∞–Ω—è—Ç–∏–π –ø–æ 2 —á–∞—Å–∞, —Ç–µ–æ—Ä–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º...\n(–¥–∞–ª–µ–µ —Ç–µ–∫—Å—Ç GD –ü–æ–ª–∏–Ω–∞)",
    "GD –ö—Å–µ–Ω–∏—è –ò—Å–ª–∞–º–æ–≤–∞": "54 –º–∏–Ω–∏-—É—Ä–æ–∫–∞ –ø–æ 30 –º–∏–Ω—É—Ç ‚Äî –º–∞–∫—Å–∏–º—É–º –ø–æ–ª—å–∑—ã –ø—Ä–∏ –º–∏–Ω–∏–º—É–º–µ –≤—Ä–µ–º–µ–Ω–∏...\n(–¥–∞–ª–µ–µ —Ç–µ–∫—Å—Ç GD –ö—Å–µ–Ω–∏—è)",
    "Specialist –ì–∏–Ω–µ–∫–æ–ª–æ–≥": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–º—É –∫—É—Ä—Å—É –ø–æ –∞–∫—É—à–µ—Ä—Å—Ç–≤—É –∏ –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏–∏...\n(–¥–∞–ª–µ–µ —Ç–µ–∫—Å—Ç Specialist –ì–∏–Ω–µ–∫–æ–ª–æ–≥)",
    "–†–µ–∑–∏–¥–µ–Ω—Ç—É—Ä–∞": "–ü–∞–∫–µ—Ç '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Ä–µ–∑–∏–¥–µ–Ω—Ç—É—Ä—É' –≤–∫–ª—é—á–∞–µ—Ç...\n(–¥–∞–ª–µ–µ —Ç–µ–∫—Å—Ç —Ä–µ–∑–∏–¥–µ–Ω—Ç—É—Ä–∞)",
}

COURSE_PROGRAMS = {
    "GP": "–†–∞–∑–±–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω: –ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è, –ü—É–ª—å–º–æ–Ω–æ–ª–æ–≥–∏—è, –•–∏—Ä—É—Ä–≥–∏—è, –ú–∞–º–º–æ–ª–æ–≥–∏—è...",
    "BT": "–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É - https://clck.ru/3FAPvx",
    "GD –ü–æ–ª–∏–Ω–∞ –ì–∞–Ω–∂–∞—Ä–∞": "–ü–∞—Ç–æ–ª–æ–≥–∏—è –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞: –Ω–æ—Ä–º–∞, —Ç—Ä–∞–≤–º–∞, –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–∞—Ç–æ–ª–æ–≥–∏—è —Å–ª–∏–∑–∏—Å—Ç–æ–π...",
    "Specialist –ì–∏–Ω–µ–∫–æ–ª–æ–≥": "–ó–∞–Ω—è—Ç–∏–µ 1: –ê–Ω–∞—Ç–æ–º–∏—è, —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—è –∏ —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è –≤ –∞–∫—É—à–µ—Ä—Å—Ç–≤–µ...",
    "Spec –î–µ—Ä–º–∞—Ç–æ–ª–æ–≥": "Basic dermatology, Histology, Drugs overview, Acne vulgaris, rosacea...",
    "Spec –ö–∞—Ä–¥–∏–æ–ª–æ–≥": "Hypertension. Main steps of treatment. Structure of the heart...",
    "Spec –°–µ–º–µ–π–Ω–∞—è –ú–µ–¥–∏—Ü–∏–Ω–∞": "–ó–∞–Ω—è—Ç–∏–µ 1: –ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è, –ò–ë–°, –°–ù, –≠–ö–ì...",
    "Spec –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ú–µ–¥–∏—Ü–∏–Ω–∞": "–ó–∞–Ω—è—Ç–∏–µ 1: –ò–ë–°, –∏–Ω—Ñ–∞—Ä–∫—Ç, –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è, –≠–ö–ì, –∫–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏–∏...",
    "Spec –ü–µ–¥–∏–∞—Ç—Ä": "Milestone+vaccination, Neonatology, Syndroms, Nephrology, Cardio...",
    "–•–∏—Ä—É—Ä–≥": "–û—Å—Ç—Ä—ã–π –∂–∏–≤–æ—Ç, –ø–∏—â–µ–≤–æ–¥, –∂–µ–ª—É–¥–æ–∫, –∫–∏—à–µ—á–Ω–∏–∫, –ø–µ—á–µ–Ω—å, –ø–æ–¥–∂–µ–ª—É–¥–æ—á–Ω–∞—è...",
    "–≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥": "–î–∏–∞–±–µ—Ç, –æ–∂–∏—Ä–µ–Ω–∏–µ, —Ç–∏—Ä–µ–æ–∏–¥–∏—Ç—ã, –≥–∏–ø–æ—Ñ–∏–∑, –Ω–∞–¥–ø–æ—á–µ—á–Ω–∏–∫–∏, –≤–∏—Ç–∞–º–∏–Ω D...",
    "Spec –û—Ç–æ–ª–æ—Ä–∏–Ω–≥–æ–ª–æ–≥": "–û—Ç–æ–Ω–µ–≤—Ä–æ–ª–æ–≥–∏—è, –∞—É–¥–∏–æ–ª–æ–≥–∏—è, —Ä–∏–Ω–æ–ª–æ–≥–∏—è, —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è...",
    "Spec –¢—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥": "–û—Ä—Ç–æ–ø–µ–¥–∏—è, —Ç—Ä–∞–≤–º—ã, –∞—Ä—Ç—Ä–æ–∑—ã, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∞–≤–º—ã, –æ–ø—É—Ö–æ–ª–∏, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç...",
    "Spec –£—Ä–æ–ª–æ–≥": "–•–∏—Ä—É—Ä–≥–∏—è, –∏–Ω—Ñ–µ–∫—Ü–∏–∏, –ú–ö–ë, –ü–ù, –æ–ø—É—Ö–æ–ª–∏, –ø–µ–¥–∏–∞—Ç—Ä–∏—á–µ—Å–∫–∞—è —É—Ä–æ–ª–æ–≥–∏—è...",
    "Spec –ü–ª–∞—Å—Ç–∏—á–µ—Å–∫–∏–π —Ö–∏—Ä—É—Ä–≥": "Wound repair, Anesthesia, Burns, Head and Neck, Breast, Safety...",
    "Spec –°–æ—Å—É–¥–∏—Å—Ç—ã–π —Ö–∏—Ä—É—Ä–≥": "Vasculitis, thrombosis, anatomy, ischemia, diabetes, endovascular...",
    "Spec –ù–µ–≤—Ä–æ–ª–æ–≥": "–ò–Ω—Å—É–ª—å—Ç, —ç–ø–∏–ª–µ–ø—Å–∏—è, –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ, –∏–º–º—É–Ω–Ω—ã–µ, –º—ã—à–µ—á–Ω—ã–µ, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ–±–∑–æ—Ä...",
    "Spec –ê–Ω–µ—Å—Ç–µ–∑–∏–æ–ª–æ–≥": "Airway, Neuro/Cardiac anesthesia, Pediatrics, Ethics, Pain, NORA...",
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["–£–∑–Ω–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é"], ["–®–∞–±–ª–æ–Ω—ã —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞–Ω–∏—è"], ["–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞"]]
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return MAIN_MENU

async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text
    if choice == "–£–∑–Ω–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é":
        keyboard = [["–≤—Ä–∞—á", "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥"]]
        await update.message.reply_text(
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤—Ä–∞—á–æ–º –∏–ª–∏ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–æ–º?",
            reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return PROFESSION
    elif choice == "–®–∞–±–ª–æ–Ω—ã —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞–Ω–∏—è":
        keyboard = [[key] for key in RESUME_TEMPLATES.keys()]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞–Ω–∏—è:",
            reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return RESUME_TEMPLATE_CHOICE
    elif choice == "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞":
        keyboard = [[key] for key in COURSE_PROGRAMS.keys()]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É:",
            reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return COURSE_PROGRAM_CHOICE
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return MAIN_MENU

async def resume_template_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    key = update.message.text
    template = RESUME_TEMPLATES.get(key)
    if template:
        await update.message.reply_text(template)
    else:
        await update.message.reply_text("–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    return ConversationHandler.END

async def course_program_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    key = update.message.text
    program = COURSE_PROGRAMS.get(key)
    if program:
        await update.message.reply_text(program)
    else:
        await update.message.reply_text("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    return ConversationHandler.END

# üëá (–æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å: profession ‚Üí from_russia ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
# ‚Äî [–¢–í–û–ô –ö–û–î –õ–ò–¶–ï–ù–ó–ò–†–û–í–ê–ù–ò–Ø –æ—Ç PROFESSION –¥–æ determine_license() ‚Äî —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å –∫–∞–∫ –µ—Å—Ç—å] ‚Äî
# ‚Äî [–Ω–µ –∑–∞–±—É–¥—å –≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏: cancel, determine_license –∏ —Ç.–¥.] ‚Äî

# –ó–∞–ø—É—Å–∫
def main():
    import asyncio
    from telegram.ext import Application

    TOKEN = os.getenv("TOKEN")
    application = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            MAIN_MENU: [MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu)],
            RESUME_TEMPLATE_CHOICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, resume_template_choice)],
            COURSE_PROGRAM_CHOICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, course_program_choice)],

            # üëá –Ω–∏–∂–µ ‚Äî –±–ª–æ–∫ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º
            PROFESSION: [MessageHandler(filters.Regex("^(–≤—Ä–∞—á|—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥)$"), profession)],
            EDUCATION: [MessageHandler(filters.Regex("^(–¥–∞|–Ω–µ—Ç)$"), education)],
            SPECIALITY_CHECK: [MessageHandler(filters.Regex("^(–¥–∞|–Ω–µ—Ç)$"), speciality_check)],
            EXPERIENCE: [MessageHandler(filters.TEXT & ~filters.COMMAND, experience)],
            POSTGRADUATE_EDU: [MessageHandler(filters.Regex("^(" + "|".join(POSTGRADUATE_OPTIONS) + ")$"), postgraduate_edu)],
            POSTGRADUATE_YEARS: [MessageHandler(filters.Regex("^(–¥–∞|–Ω–µ—Ç)$"), postgraduate_years)],
            ACCREDITATION: [MessageHandler(filters.Regex("^(–¥–∞|–Ω–µ—Ç)$"), accreditation)],
            FROM_RUSSIA: [MessageHandler(filters.Regex("^(–¥–∞|–Ω–µ—Ç)$"), from_russia)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)
    application.run_polling()

if __name__ == '__main__':
    main()